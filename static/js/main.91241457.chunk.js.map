{"version":3,"sources":["components/InitialMsg.jsx","icons/cart.svg","pages/CartItems.jsx","components/CategoriesBar.jsx","services/api.js","components/ButtonMoreDetails.jsx","components/ButtonAddCart.jsx","components/ListProducts.jsx","components/EvaluationProduct.jsx","components/Loading.jsx","components/EvaluationStars.jsx","pages/Product.jsx","pages/Checkout.jsx","components/ButtonListCart.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["InitialMsg","searchOnKeyDown","keyCode","document","querySelector","click","handleChange","bind","handleClick","state","valueQuery","redirect","target","this","setState","value","callback","props","condition","className","to","type","onChange","onKeyDown","onClick","mensagemInicial","Component","CartItems","itemsAdd","removeItemCart","src","ICON_CART","alt","length","map","objectItem","thumbnail","title","quantity","id","disabled","available_quantity","Intl","NumberFormat","style","currency","format","price","reduce","acc","React","CategoriesBar","items","categories","name","a","fetch","request","json","requestJson","getProductsFromCategoryAndQuery","categoryId","query","ButtonMoreDetails","productDetails","category_id","ButtonAddCart","dataTestid","ListProducts","searchResults","product","match","shipping","free_shipping","EvaluationProduct","evaluation","querySelectorAll","forEach","radio","checked","submitAndCleanState","email","comment","some","submitForm","placeholder","htmlFor","Loading","EvalStars","Product","fethProduct","prodDetails","loading","params","result","results","filter","allEvaluation","evaluations","elem","attributes","value_name","comments","ind","Checkout","localStorage","setItem","JSON","stringify","finish","cartItems","ButtonListCart","productTotal","total","item","Header","App","decrease","newItem","newState","available","getProducts","index","prod","splice","valueId","itemsAtt","parse","getItem","loadLocalStorage","searchItems","category","searched","isLoading","then","saveEvaluation","valueForm","evalProduct","elemnt","array","push","newEvaluation","atualizaState","loaded","categoriesBar","getCategories","exact","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","component","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.91241457.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\n\nexport default class InitialMsg extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      valueQuery: '',\n      redirect: false,\n    };\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      valueQuery: target.value,\n    });\n  }\n\n  handleClick() {\n    const { callback } = this.props;\n    const { valueQuery } = this.state;\n    callback('', valueQuery);\n    this.setState({ valueQuery: '', redirect: true }, () => {\n      this.setState({ redirect: false });\n    });\n  }\n\n  searchOnKeyDown = ({ keyCode }) => {\n    const key = 13;\n    if (keyCode === key) document.querySelector('button.search-btn').click();\n  }\n\n  mensagemInicial() {\n    return (\n      <p data-testid=\"home-initial-message\">\n        Digite algum termo de pesquisa ou escolha uma categoria.\n      </p>\n    );\n  }\n\n  render() {\n    const { state: { valueQuery, redirect }, props: { condition } } = this;\n    return (\n      <section className=\"search-area\">\n        { redirect && <Redirect to=\"/\" /> }\n        <div>\n          <input\n            type=\"text\"\n            className=\"search-input\"\n            data-testid=\"query-input\"\n            value={ valueQuery }\n            onChange={ this.handleChange }\n            onKeyDown={ this.searchOnKeyDown }\n          />\n          <button\n            type=\"button\"\n            className=\"search-btn\"\n            data-testid=\"query-button\"\n            onClick={ this.handleClick }\n          >\n            Pesquisar\n          </button>\n        </div>\n        { !condition && <div className=\"initial-msg\">{ this.mensagemInicial() }</div> }\n      </section>\n    );\n  }\n}\n\nInitialMsg.propTypes = {\n  callback: PropTypes.func.isRequired,\n  condition: PropTypes.bool.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/cart.4a8eb25f.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ICON_CART from '../icons/cart.svg';\nimport '../styles/CartItems.css';\n\nexport default class CartItems extends React.Component {\n  // componentDidMount() {\n  //   this.sumPricesTotal();\n  // }\n\n  // sumPricesTotal = () => {\n  //   const itemsStorage = JSON.parse(localStorage.getItem('getProducts'));\n  //   const priceTotal = itemsStorage\n  //     .map(({ price, quantity }) => price * quantity)\n  //     .reduce((acc, cur) => (acc + cur), 0);\n  //   this.setState({ priceTotal });\n  // };\n\n  render() {\n    const { itemsAdd, callback, removeItemCart } = this.props;\n    return (\n      <div className=\"cart-items\">\n        <span className=\"cart-items-title\">\n          <img className=\"icon-cart\" src={ ICON_CART } alt=\"Carrinho de Compras\" />\n          <h4>Carrinho de Compras</h4>\n        </span>\n\n        { itemsAdd.length === 0\n          ? (\n            <div>\n              <h2\n                className=\"cart-empty-message\"\n                data-testid=\"shopping-cart-empty-message\"\n              >\n                Seu carrinho está vazio\n              </h2>\n              <Link\n                to=\"/onlineStore\"\n              >\n                <button\n                  className=\"button-add-more-items\"\n                  type=\"button\"\n                >\n                  Adicionar Itens\n                </button>\n              </Link>\n            </div>)\n          : (\n            <div>\n              <ul className=\"separator\">\n                {itemsAdd.map((objectItem) => (\n                  <li className=\"item-cart\" key={ objectItem.id }>\n                    <img\n                      className=\"image-item-cart\"\n                      src={ objectItem.thumbnail }\n                      alt={ objectItem.title }\n                    />\n                    <h4\n                      className=\"text-item-cart\"\n                      data-testid=\"shopping-cart-product-name\"\n                    >\n                      { objectItem.title }\n                    </h4>\n                    <div className=\"order-details\">\n                      <span className=\"quantity\">\n                        { objectItem.quantity > 1\n                          ? (\n                            <button\n                              className=\"moviment-quantity\"\n                              data-testid=\"product-decrease-quantity\"\n                              type=\"button\"\n                              onClick={ () => {\n                                callback(objectItem, true);\n                              } }\n                            >\n                              -\n                            </button>)\n                          : (\n                            <button\n                              className=\"remove-item\"\n                              type=\"button\"\n                              onClick={ () => {\n                                removeItemCart(objectItem.id);\n                              } }\n                            >\n                              X\n                            </button>)}\n\n                        <h4\n                          className=\"text-quantity\"\n                          data-testid=\"shopping-cart-product-quantity\"\n                        >\n                          { objectItem.quantity }\n                        </h4>\n                        <button\n                          className=\"moviment-quantity\"\n                          data-testid=\"product-increase-quantity\"\n                          type=\"button\"\n                          onClick={ () => { callback(objectItem); } }\n                          disabled={ objectItem.quantity + 1\n                              > objectItem.available_quantity }\n                        >\n                          +\n                        </button>\n                      </span>\n                      <h4 className=\"text-price-item\">\n                        { Intl.NumberFormat('pt-br',\n                          { style: 'currency', currency: 'BRL' })\n                          .format(objectItem.price * objectItem.quantity) }\n                      </h4>\n                    </div>\n                  </li>))}\n              </ul>\n              <div className=\"price-total\">\n                <div className=\"completed-shopping\">\n                  <Link\n                    to=\"/onlineStore\"\n                  >\n                    <button\n                      className=\"button-add-more-items\"\n                      type=\"button\"\n                    >\n                      Adicionar Mais Itens\n                    </button>\n                  </Link>\n                </div>\n                <div className=\"completed-shopping\">\n                  <h2>\n                    {`Valor Total: ${Intl.NumberFormat('pt-br',\n                      { style: 'currency', currency: 'BRL' })\n                      .format(itemsAdd\n                        .reduce((acc, { price, quantity }) => (\n                          acc + (price * quantity)), 0))}` }\n                  </h2>\n                  <Link to=\"/onlineStore/checkout\">\n                    <button\n                      className=\"button-add-more-items\"\n                      type=\"button\"\n                      data-testid=\"checkout-products\"\n                    >\n                      Finalizar Compra\n                    </button>\n                  </Link>\n                </div>\n              </div>\n\n            </div>)}\n      </div>\n    );\n  }\n}\n\nCartItems.propTypes = {\n  itemsAdd: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n  callback: PropTypes.func.isRequired,\n  removeItemCart: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/CategoriesBar.css';\nimport { Link } from 'react-router-dom';\n\nexport default class CategoriesBar extends Component {\n  constructor(props) {\n    super();\n    const { items } = props;\n    this.state = {\n      categories: items,\n    };\n  }\n\n  handleClick = ({ target: { id } }) => {\n    const { callback } = this.props;\n    callback(id, '');\n  }\n\n  render() {\n    const { categories } = this.state;\n    return (\n      <ul className=\"categories-aside\" value=\"valor\">\n        <p>Categorias: </p>\n        { categories.map(({ id, name }) => (\n          <Link to=\"/onlineStore\" key={ id }>\n            <li\n              className=\"categories-item\"\n              id={ id }\n              onClick={ this.handleClick }\n              aria-hidden=\"true\"\n              data-testid=\"category\"\n            >\n              <p id={ id }>{ name }</p>\n            </li>\n          </Link>)) }\n      </ul>\n    );\n  }\n}\n\nCategoriesBar.propTypes = PropTypes.shape({\n  categories: PropTypes.arrayOf(PropTypes.object),\n}).isRequired;\n","export async function getCategories() {\n  const request = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const requestJson = await request.json();\n  return requestJson;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const request = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const requestJson = await request.json();\n\n  return requestJson;\n}\n\nexport async function getDetailsProductById(itemId) {\n  const request = await fetch(`https://api.mercadolibre.com/items/${itemId}`);\n  const requestJson = await request.json();\n\n  return requestJson;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ButtonMoreDetails extends React.Component {\n  render() {\n    const { productDetails: { category_id: categoryId, id } } = this.props;\n    return (\n      <Link to={ `/onlineStore/product/${categoryId}/${id}` }>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-link\"\n        >\n          Mais detalhes\n        </button>\n      </Link>\n    );\n  }\n}\n\nButtonMoreDetails.propTypes = {\n  productDetails: PropTypes.shape({\n    thumbnail: PropTypes.string,\n    price: PropTypes.number,\n    title: PropTypes.string,\n    category_id: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ButtonMoreDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ButtonAddCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    const { productDetails, callback, dataTestid } = this.props;\n    return (\n      <button\n        type=\"button\"\n        className=\"cart-button-add-cart\"\n        data-testid={ dataTestid }\n        onClick={ () => callback(productDetails) }\n      >\n        Adicionar ao Carrinho\n      </button>\n    );\n  }\n}\n\nButtonAddCart.propTypes = {\n  productDetails: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n  callback: PropTypes.func.isRequired,\n  dataTestid: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonMoreDetails from './ButtonMoreDetails';\nimport ButtonAddCart from './ButtonAddCart';\n\nexport default class ListProducts extends Component {\n  render() {\n    const { searchResults, callback } = this.props;\n    const maxLength = 45;\n    return (\n      <section className=\"list-products\">\n        {searchResults.length > 0 ? (\n          <ul>\n            { searchResults.map((product) => (\n              <li key={ product.id } data-testid=\"product\">\n                <h4>\n                  { product.title.length > maxLength\n                    ? `${product.title.match(/.{45}/)[0]}...` : product.title }\n                </h4>\n                <img\n                  className=\"product-img\"\n                  src={ product.thumbnail }\n                  alt={ product.title }\n                />\n                <p className=\"product-price\">\n                  { Intl.NumberFormat('pt-br', { style: 'currency', currency: 'BRL' })\n                    .format(product.price) }\n                </p>\n                { product.shipping.free_shipping && (\n                  <h4 className=\"free-shipping\" data-testid=\"free-shipping\">\n                    FRETE GRÁTIS\n                  </h4>) }\n                <ButtonMoreDetails productDetails={ product } />\n                <ButtonAddCart\n                  dataTestid=\"product-add-to-cart\"\n                  callback={ callback }\n                  productDetails={ product }\n                />\n              </li>\n            ))}\n          </ul>) : <p className=\"initial-msg\">Nenhum produto foi encontrado</p>}\n      </section>\n    );\n  }\n}\n\nListProducts.propTypes = {\n  searchResults: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n  callback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EvaluationProduct extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      evaluation: '',\n      comment: '',\n    };\n  }\n\n  handleClick = ({ target }) => {\n    const { value } = target;\n    this.setState({\n      evaluation: value,\n    });\n    document.querySelectorAll('.eval-radio-input')\n      .forEach((radio) => {\n        radio.checked = false;\n        if (radio.value <= value) radio.checked = true;\n      });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  submitAndCleanState = () => {\n    const { email, evaluation, comment } = this.state;\n    if ([email, evaluation, comment].some((value) => !value)) return;\n    const { id, submitForm } = this.props;\n    submitForm(id, this.state);\n    this.setState({\n      email: '',\n      evaluation: '',\n      comment: '',\n    });\n    document.querySelectorAll('.eval-radio-input')\n      .forEach((radio) => {\n        radio.checked = false;\n      });\n  }\n\n  render() {\n    const { email, evaluation, comment } = this.state;\n    return (\n      <form className=\"evaluation-form\">\n        Deixe sua avaliação:\n        <div>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={ email }\n            className=\"eval-email\"\n            onChange={ this.handleChange }\n            placeholder=\"Email\"\n          />\n          <p>{ `Sua avaliação: ${evaluation}` }</p>\n          <label htmlFor=\"radio1\">\n            <input\n              type=\"radio\"\n              id=\"radio1\"\n              className=\"eval-radio-input\"\n              onClick={ this.handleClick }\n              value=\"1\"\n            />\n            <b className=\"eval-star\" />\n          </label>\n          <label htmlFor=\"radio2\">\n            <input\n              type=\"radio\"\n              id=\"radio2\"\n              className=\"eval-radio-input\"\n              onClick={ this.handleClick }\n              value=\"2\"\n            />\n            <b className=\"eval-star\" />\n          </label>\n          <label htmlFor=\"radio3\">\n            <input\n              type=\"radio\"\n              id=\"radio3\"\n              className=\"eval-radio-input\"\n              onClick={ this.handleClick }\n              value=\"3\"\n            />\n            <b className=\"eval-star\" />\n          </label>\n          <label htmlFor=\"radio4\">\n            <input\n              type=\"radio\"\n              id=\"radio4\"\n              className=\"eval-radio-input\"\n              onClick={ this.handleClick }\n              value=\"4\"\n            />\n            <b className=\"eval-star\" />\n          </label>\n          <label htmlFor=\"radio5\">\n            <input\n              type=\"radio\"\n              id=\"radio5\"\n              className=\"eval-radio-input\"\n              onClick={ this.handleClick }\n              value=\"5\"\n            />\n            <b className=\"eval-star\" />\n          </label>\n        </div>\n        <div>\n          <textarea\n            name=\"comment\"\n            value={ comment }\n            onChange={ this.handleChange }\n            data-testid=\"product-detail-evaluation\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={ this.submitAndCleanState }\n        >\n          Avaliar\n        </button>\n      </form>\n    );\n  }\n}\n\nEvaluationProduct.propTypes = {\n  id: PropTypes.string.isRequired,\n  submitForm: PropTypes.func.isRequired,\n};\n\nexport default EvaluationProduct;\n","import React from 'react';\nimport ICON_CART from '../icons/cart.svg';\n\nexport default class Loading extends React.Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <span>Aguarde... </span>\n        <img src={ ICON_CART } alt=\"Carrinho de compras\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class EvalStars extends Component {\n  render() {\n    const { evaluation } = this.props;\n\n    return (\n      <div>\n        <span className={ evaluation >= 1 ? 'yellowStar' : 'whiteStar' }>\n          ★\n        </span>\n        <span className={ evaluation >= 2 ? 'yellowStar' : 'whiteStar' }>\n          ★\n        </span>\n        <span className={ evaluation >= (2 + 1) ? 'yellowStar' : 'whiteStar' }>\n          ★\n        </span>\n        <span className={ evaluation >= (2 + 2) ? 'yellowStar' : 'whiteStar' }>\n          ★\n        </span>\n        <span className={ evaluation >= (2 + 2 + 1) ? 'yellowStar' : 'whiteStar' }>\n          ★\n        </span>\n      </div>\n    );\n  }\n}\n\nEvalStars.propTypes = { evaluation: PropTypes.number.isRequired };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/ProductDetails.css';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport ButtonAddCart from '../components/ButtonAddCart';\nimport EvaluationProduct from '../components/EvaluationProduct';\nimport Loading from '../components/Loading';\nimport EvalStars from '../components/EvaluationStars';\n\nclass Product extends React.Component {\n  constructor() {\n    super();\n\n    this.fethProduct = this.fethProduct.bind(this);\n    this.state = {\n      prodDetails: [],\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.fethProduct();\n  }\n\n  async fethProduct() {\n    const { match: { params: { id, categoryId } } } = this.props;\n    const result = await getProductsFromCategoryAndQuery(categoryId, '');\n    const productDetails = result.results.filter((product) => product.id === id);\n    this.setState({\n      prodDetails: productDetails[0] || [],\n    }, () => this.setState({ loading: true }));\n  }\n\n  render() {\n    const { prodDetails, loading } = this.state;\n    const { callback, submitForm, allEvaluation } = this.props;\n    const { match: { params: { id } } } = this.props;\n\n    let evaluations = [];\n    if (allEvaluation.length >= 1) {\n      evaluations = allEvaluation.filter((elem) => elem.id === id);\n    }\n    if (loading && prodDetails.length < 1) {\n      return (\n        <div>Desculpe. Não foi possível encontrar os detalhes deste produto.</div>\n      );\n    }\n    return (\n      loading\n        ? (\n          <section className=\"product-details\">\n            <Link className=\"back-details\" to=\"/onlineStore\">↶</Link>\n            <div className=\"details-div-content\">\n              <h1 data-testid=\"product-detail-name\">\n                { prodDetails.title }\n              </h1>\n            </div>\n            <div className=\"details-div-content\">\n              <div className=\"product-info-details\">\n                <div>\n                  <h2>Especificações:</h2>\n                  <ul>\n                    { prodDetails.attributes.map(({ name, value_name: value }) => (\n                      <li key={ name }>{ `${name}: ${value || 'N/A'}` }</li>)) }\n                  </ul>\n                  { prodDetails.shipping.free_shipping && (\n                    <h4\n                      data-testid=\"free-shipping\"\n                    >\n                      FRETE GRÁTIS\n                    </h4>) }\n                  <ButtonAddCart\n                    dataTestid=\"product-detail-add-to-cart\"\n                    productDetails={ prodDetails }\n                    callback={ callback }\n                  />\n                </div>\n                <img src={ prodDetails.thumbnail } alt={ prodDetails.title } />\n              </div>\n            </div>\n            <div className=\"details-div-content\">\n              <h3>Avaliações</h3>\n              {\n                evaluations.length > 0\n                  ? evaluations[0].comments.map(({ email, comment, evaluation }, ind) => (\n                    <div key={ `${ind}${evaluation}` } className=\"eval-coments\">\n                      <h4>{ email }</h4>\n                      <p>{ comment }</p>\n                      <EvalStars evaluation={ evaluation } />\n                    </div>\n                  )) : (\n                    <div className=\"eval-coments\">\n                      Ainda não há avaliações para este item. Seja o primeiro!\n                    </div>\n                  )\n              }\n              <EvaluationProduct id={ id } submitForm={ submitForm } />\n            </div>\n          </section>) : <Loading />\n\n    );\n  }\n}\n\nProduct.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n      categoryId: PropTypes.string,\n    }),\n  }).isRequired,\n  callback: PropTypes.func.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  allEvaluation: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Product;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/CheckoutStyles.css';\nimport { Redirect } from 'react-router';\n\nexport default class Checkout extends React.Component {\n  constructor() {\n    super();\n    this.state = { finish: false };\n  }\n\n  handleClick = () => {\n    const { callback } = this.props;\n    localStorage.setItem('getProducts', JSON.stringify([]));\n    \n    this.setState({ finish: true }, () => callback());\n  };\n\n  render() {\n    const { props: { cartItems }, state: { finish } } = this;\n    return (\n      <section className=\"checkout\">\n        <div className=\"checkout-list\">\n          { cartItems.map(({ thumbnail, id, title, price, quantity }) => (\n            <div key={ id } className=\"checkout-items\">\n              <h5>\n                { title }\n              </h5>\n              <img src={ thumbnail } alt={ title } />\n              <p>\n                { Intl.NumberFormat('pt-br', { style: 'currency', currency: 'BRL' })\n                  .format(price) }\n                <b> X </b>\n                { quantity }\n              </p>\n            </div>\n          )) }\n        </div>\n        <form className=\"checkout-form\">\n          <label className=\"checkout-inputs\" htmlFor=\"fullname\">\n            Nome:\n            <input id=\"fullname\" type=\"text\" data-testid=\"checkout-fullname\" />\n          </label>\n          <label className=\"checkout-inputs\" htmlFor=\"email\">\n            Email:\n            <input id=\"email\" type=\"text\" data-testid=\"checkout-email\" />\n          </label>\n          <label className=\"checkout-inputs\" htmlFor=\"cpf\">\n            CPF:\n            <input id=\"cpf\" type=\"text\" data-testid=\"checkout-cpf\" />\n          </label>\n          <label className=\"checkout-inputs\" htmlFor=\"phone\">\n            Telefone:\n            <input id=\"phone\" type=\"text\" data-testid=\"checkout-phone\" />\n          </label>\n          <label className=\"checkout-inputs\" htmlFor=\"cep\">\n            CEP:\n            <input id=\"cep\" type=\"text\" data-testid=\"checkout-cep\" />\n          </label>\n          <label className=\"checkout-inputs\" htmlFor=\"address\">\n            Endereço:\n            <input id=\"address\" type=\"text\" data-testid=\"checkout-address\" />\n          </label>\n          <button type=\"button\" onClick={ this.handleClick }>\n            Finalizar\n          </button>\n        </form>\n        { finish && <Redirect to=\"/onlineStore/\" />}\n      </section>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ICON_CART from '../icons/cart.svg';\nimport '../icons/icons.css';\n\nexport default class ButtonListCart extends React.Component {\n  render() {\n    const { items } = this.props;\n    const productTotal = items.reduce((total, item) => total + item.quantity, 0);\n    return (\n      <button type=\"button\" className=\"cart-button\">\n        <Link data-testid=\"shopping-cart-button\" to=\"/onlineStore/cart-items\">\n          <img className=\"iconCart\" src={ ICON_CART } alt=\"Carrinho de Compras\" />\n        </Link>\n        { productTotal > 0\n          && <span data-testid=\"shopping-cart-size\">{ productTotal }</span> }\n      </button>\n    );\n  }\n}\n\nButtonListCart.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonListCart from './ButtonListCart';\nimport '../styles/Header.css';\n\nexport default class Header extends React.Component {\n  render() {\n    const { items } = this.props;\n    return (\n      <header>\n        <h3>Bem Vindo!</h3>\n        <div className=\"t-o-s\">\n          <span className=\"tos-logo\" />\n          <h2>Trybers Online Store</h2>\n        </div>\n        <ButtonListCart items={ items } />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = { items: PropTypes.arrayOf(PropTypes.object).isRequired };\n","import React, { Component } from 'react';\nimport './styles/App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport InitialMsg from './components/InitialMsg';\nimport CartItems from './pages/CartItems';\nimport CategoriesBar from './components/CategoriesBar';\nimport {\n  getCategories,\n  getProductsFromCategoryAndQuery } from './services/api';\nimport ListProducts from './components/ListProducts';\nimport Product from './pages/Product';\nimport Checkout from './pages/Checkout';\nimport Header from './components/Header';\nimport Loading from './components/Loading';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loaded: false,\n      categoriesBar: [],\n      isLoading: false,\n      searched: false,\n      searchResults: [],\n      getProducts: [],\n      allEvaluation: [],\n    };\n  }\n\n  componentDidMount() {\n    getCategories()\n      .then((items) => this.setState({\n        categoriesBar: items,\n        loaded: true,\n      }));\n    this.loadLocalStorage();\n  }\n\n  handleClick = (objectItem, decrease) => {\n    const { title, thumbnail, id,\n      price, available_quantity: available } = objectItem;\n    const { getProducts } = this.state;\n    let newItem;\n    let newState;\n\n    if (getProducts.some((product) => product.id === id)) {\n      let index;\n      const product = getProducts.filter((prod, ind) => {\n        if (prod.id === id) index = ind;\n        return prod.id === id;\n      })[0];\n      const quantity = decrease ? product.quantity - 1 : product.quantity + 1;\n      if (quantity > available) return;\n      newState = [...getProducts];\n      newState.splice(index, 1,\n        { thumbnail, id, title, price, quantity, available_quantity: available });\n    } else {\n      newItem = {\n        thumbnail, id, title, price, quantity: 1, available_quantity: available,\n      };\n      newState = [...getProducts, newItem];\n    }\n\n    this.setState({\n      getProducts: newState,\n    }, () => {\n      localStorage.setItem('getProducts', JSON.stringify(newState));\n    });\n  }\n\n  removeItemCart = (valueId) => {\n    const itemsStorage = JSON.parse(localStorage.getItem('getProducts'));\n    const itemsAtt = itemsStorage.filter(({ id }) => valueId !== id);\n    localStorage.setItem('getProducts', JSON.stringify(itemsAtt));\n    this.loadLocalStorage();\n  }\n\n  searchItems = (category, query) => {\n    this.setState({ searched: false, isLoading: true });\n    getProductsFromCategoryAndQuery(category, query)\n      .then(({ results }) => this.setState({\n        searched: true,\n        isLoading: false,\n        searchResults: results,\n      }));\n  }\n\n  saveEvaluation = (id, valueForm) => {\n    const { allEvaluation } = this.state;\n    const { email, evaluation, comment } = valueForm;\n    const evalProduct = allEvaluation.filter((elemnt) => elemnt.id === id);\n\n    if (evalProduct.length >= 1) {\n      const array = evalProduct[0].comments;\n      array.push({ email, evaluation, comment });\n      const newEvaluation = { id, comments: array };\n      const atualizaState = allEvaluation.filter((elemnt) => elemnt.id !== id);\n      atualizaState.push(newEvaluation);\n      this.setState({ allEvaluation: atualizaState }, () => {\n        localStorage.setItem('evaluationStorage', JSON.stringify(allEvaluation));\n      });\n    } else {\n      const newEvaluation = { id, comments: [{ email, evaluation, comment }] };\n      allEvaluation.push(newEvaluation);\n      this.setState({ allEvaluation }, () => {\n        localStorage.setItem('evaluationStorage', JSON.stringify(allEvaluation));\n      });\n    }\n  };\n\n  loadLocalStorage = () => {\n    if (localStorage.getItem('getProducts')) {\n      if (localStorage.getItem('evaluationStorage')) {\n        this.setState({\n          getProducts: JSON.parse(localStorage.getItem('getProducts')),\n          allEvaluation: JSON.parse(localStorage.getItem('evaluationStorage')),\n        });\n        return;\n      }\n      this.setState({ getProducts: JSON.parse(localStorage.getItem('getProducts')) });\n    }\n  };\n\n  render() {\n    const { categoriesBar, loaded, searched, isLoading,\n      searchResults, getProducts, allEvaluation } = this.state;\n    return (\n      <main>\n        <BrowserRouter>\n          <Switch>\n            <Route\n              exact\n              path=\"/onlineStore\"\n              render={ () => (\n                <>\n                  <Header items={ getProducts } />\n                  <div className=\"categories-div\">\n                    { loaded && <CategoriesBar\n                      items={ categoriesBar }\n                      callback={ this.searchItems }\n                    /> }\n                  </div>\n                  <div className=\"main-div\">\n                    <nav>\n                      <InitialMsg callback={ this.searchItems } condition={ searched } />\n                    </nav>\n                    { isLoading && <Loading /> }\n                    { searched && (\n                      <ListProducts\n                        callback={ this.handleClick }\n                        searchResults={ searchResults }\n                      />) }\n                  </div>\n                </>) }\n            />\n            <Route path=\"/onlineStore/cart-items\">\n              <Header items={ getProducts } />\n              <CartItems\n                itemsAdd={ getProducts }\n                callback={ this.handleClick }\n                removeItemCart={ this.removeItemCart }\n              />\n            </Route>\n            <Route\n              path=\"/onlineStore/product/:categoryId/:id\"\n              render={ (props) => (\n                <>\n                  <Header items={ getProducts } />\n                  <div className=\"categories-div\">\n                    { loaded && <CategoriesBar\n                      items={ categoriesBar }\n                      callback={ this.searchItems }\n                    /> }\n                  </div>\n                  <div className=\"main-div\">\n                    <nav>\n                      <InitialMsg callback={ this.searchItems } condition={ searched } />\n                    </nav>\n                    <Product\n                      { ...props }\n                      callback={ this.handleClick }\n                      submitForm={ this.saveEvaluation }\n                      allEvaluation={ allEvaluation }\n                      items={ getProducts }\n                    />\n                  </div>\n                </>\n              ) }\n            />\n            <Route path=\"/onlineStore/checkout\">\n              <Header items={ getProducts } />\n              <Checkout cartItems={ getProducts } callback={ this.loadLocalStorage } />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route component={ App } />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}